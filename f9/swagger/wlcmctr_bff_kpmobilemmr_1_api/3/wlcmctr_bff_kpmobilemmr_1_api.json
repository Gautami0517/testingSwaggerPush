{
  "swagger" : "2.0",
  "info" : {
    "version" : "1.0.0",
    "title" : "wlcmctr_bff_kpmobilemmr_1_api",
    "x-ibm-name" : "wlcmctr-bff-kpmobilemmr-1-api"
  },
  "host" : "$(catalog.host)",
  "basePath" : "/mycare/welcome-center-mmr/wlcmctr-bff-kpmobilemmr/v1",
  "tags" : [ {
    "name" : "REST API for Address: healthsummary",
    "description" : "Health Summary Controller"
  }, {
    "name" : "REST API for Test Results Summary: test result summry",
    "description" : "Test Results Controller"
  }, {
    "name" : "REST API for health check",
    "description" : "BFF Health Controller"
  }, {
    "name" : "REST API for test result details: testresultsdetail",
    "description" : "Test Result Details Controller"
  }, {
    "name" : "REST API for test result historical components: test result history",
    "description" : "Test Result History Controller"
  } ],
  "schemes" : [ "https" ],
  "consumes" : [ "application/json" ],
  "produces" : [ "application/json" ],
  "security" : [ {
    "ApplicationMonitoring" : [ ]
  } ],
  "paths" : {
    "/healthsummary" : {
      "get" : {
        "tags" : [ "REST API for Address: healthsummary" ],
        "summary" : "getHealthSummary",
        "operationId" : "getHealthSummaryUsingGET",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "member",
          "in" : "query",
          "description" : "member",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "type",
          "in" : "query",
          "description" : "type",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "type" : "object",
              "properties" : { }
            }
          },
          "204" : {
            "description" : "No Content"
          },
          "206" : {
            "description" : "Partial Response"
          },
          "400" : {
            "description" : "Bad Request"
          },
          "403" : {
            "description" : "You are not authorized"
          },
          "404" : {
            "description" : "URL not found"
          },
          "405" : {
            "description" : "Method Not Supported"
          },
          "412" : {
            "description" : "Precondition Not Met"
          },
          "500" : {
            "description" : "Internal Server Error"
          },
          "503" : {
            "description" : "Service Unavailable"
          },
          "515" : {
            "description" : "Data Swap detected"
          }
        }
      }
    },
    "/testresultdetail" : {
      "get" : {
        "tags" : [ "REST API for test result details: testresultsdetail" ],
        "summary" : "getTestResultDetails",
        "operationId" : "getTestResultDetailsUsingGET",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "member",
          "in" : "query",
          "description" : "member",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "resultId",
          "in" : "query",
          "description" : "resultId",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "type" : "object",
              "properties" : { }
            }
          },
          "204" : {
            "description" : "No Data Found"
          },
          "400" : {
            "description" : "Bad Request"
          },
          "403" : {
            "description" : "Not Authorized"
          },
          "404" : {
            "description" : "Resource Not Found"
          },
          "405" : {
            "description" : "HTTP request method not supported"
          },
          "412" : {
            "description" : "Pre Condition Failed"
          },
          "500" : {
            "description" : "Internal Server Error"
          },
          "503" : {
            "description" : "Service Unavailable"
          },
          "515" : {
            "description" : "Data Swap detected"
          }
        }
      }
    },
    "/testresultdetail/history" : {
      "get" : {
        "tags" : [ "REST API for test result historical components: test result history" ],
        "summary" : "getTestResultHistory",
        "operationId" : "getTestResultHistoryUsingGET",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "member",
          "in" : "query",
          "description" : "member",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "componentId",
          "in" : "query",
          "description" : "componentId",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/TestResultHistoryMobileResponse"
            }
          },
          "204" : {
            "description" : "No Content"
          },
          "400" : {
            "description" : "Bad Request"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Resource Not Found"
          },
          "405" : {
            "description" : "Method Not Supported"
          },
          "412" : {
            "description" : "Precondition Not Met"
          },
          "500" : {
            "description" : "Internal Server Error"
          },
          "503" : {
            "description" : "Service Unavailable"
          },
          "515" : {
            "description" : "Data Swap detected"
          }
        }
      }
    },
    "/testresults" : {
      "get" : {
        "tags" : [ "REST API for Test Results Summary: test result summry" ],
        "summary" : "getTestResults",
        "operationId" : "getTestResultsUsingGET",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "member",
          "in" : "query",
          "description" : "member",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "type" : "object",
              "properties" : { }
            }
          },
          "204" : {
            "description" : "No Content"
          },
          "206" : {
            "description" : "Partial Response"
          },
          "400" : {
            "description" : "Bad Request"
          },
          "403" : {
            "description" : "You are not authorized"
          },
          "404" : {
            "description" : "URL not found"
          },
          "405" : {
            "description" : "Method Not Supported"
          },
          "412" : {
            "description" : "Precondition Not Met"
          },
          "500" : {
            "description" : "Internal Server Error"
          },
          "503" : {
            "description" : "Service Unavailable"
          },
          "515" : {
            "description" : "Data Swap detected"
          }
        }
      }
    }
  },
  "securityDefinitions" : {
    "ApplicationMonitoring" : {
      "type" : "apiKey",
      "name" : "X-IBM-Client-Id",
      "in" : "header"
    }
  },
  "definitions" : {
    "ExecutionContext" : {
      "type" : "object",
      "properties" : {
        "errors" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : { }
          }
        },
        "info" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : { }
          }
        },
        "warnings" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : { }
          }
        }
      }
    },
    "TestResultHistoryMobileResponse" : {
      "type" : "object",
      "properties" : {
        "historicalTestResult" : {
          "$ref" : "#/definitions/HistoricalTestResult"
        }
      }
    },
    "MobileHistoricalValue" : {
      "type" : "object",
      "properties" : {
        "date" : {
          "type" : "string"
        },
        "high" : {
          "type" : "string"
        },
        "low" : {
          "type" : "string"
        },
        "numericValue" : {
          "type" : "string"
        },
        "orderId" : {
          "type" : "string"
        },
        "unit" : {
          "type" : "string"
        }
      }
    },
    "HistoricalTestResult" : {
      "type" : "object",
      "properties" : {
        "componentName" : {
          "type" : "string"
        },
        "executionContext" : {
          "$ref" : "#/definitions/ExecutionContext"
        },
        "historicalValues" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/MobileHistoricalValue"
          }
        }
      }
    },
    "BFFHealth" : {
      "type" : "object",
      "properties" : {
        "cfInstanceIndex" : {
          "type" : "string"
        },
        "dependencies" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/UpStreamResponse"
          }
        },
        "javaEnv" : {
          "type" : "string"
        },
        "lastUpdatedAt" : {
          "type" : "string"
        },
        "status" : {
          "type" : "string"
        }
      }
    },
    "UpStreamResponse" : {
      "type" : "object",
      "properties" : {
        "href" : {
          "type" : "string"
        },
        "required" : {
          "type" : "boolean"
        },
        "service" : {
          "type" : "string"
        },
        "statusCode" : {
          "type" : "string"
        }
      }
    }
  },
  "x-ibm-configuration" : {
    "enforced" : true,
    "testable" : true,
    "phase" : "realized",
    "cors" : {
      "enabled" : false
    },
    "properties" : {
      "backend_endpoint" : {
        "value" : "https://prod-dfc-bff-getdocumentlist-1.dfc.ext-svc-bmxp.appl.kp.org",
        "description" : "",
        "encoded" : false
      },
      "backend_basepath" : {
        "value" : "",
        "description" : "",
        "encoded" : false
      }
    },
    "extensions" : {
      "EndpointExtension" : "1"
    },
    "catalogs" : {
      "Sandbox" : {
        "properties" : {
          "backend_endpoint" : "https://sandbox-dfc-bff-getdocumentlist-1.dfc.ext-svc-bmxp.appl.kp.org"
        }
      },
      "DIT" : {
        "properties" : {
          "backend_endpoint" : "https://dit-dfc-bff-getdocumentlist-1.dfc.ext-svc-bmxp.appl.kp.org"
        }
      },
      "QA" : {
        "properties" : {
          "backend_endpoint" : "https://qa-dfc-bff-getdocumentlist-1.dfc.ext-svc-bmxp.appl.kp.org"
        }
      },
      "UAT" : {
        "properties" : {
          "backend_endpoint" : "https://perf-dfc-bff-getdocumentlist-1.dfc.ext-svc-bmxp.appl.kp.org"
        }
      },
      "PROD" : {
        "properties" : {
          "backend_endpoint" : "https://prod-dfc-bff-getdocumentlist-1.dfc.ext-svc-bmxp.appl.kp.org"
        }
      }
    },
    "assembly" : {
      "execute" : [ {
        "log.to.k2" : {
          "LogDetail" : false,
          "GALOriginalDestination" : "KPORG-DFC-SJ001-dfc-bff-getdocumentlist_DP_KPCanonicalXML",
          "version" : "1.0.0",
          "ApplicationName" : "dfc-bff-getdocumentlist"
        }
      }, {
        "simple.routing.rule.for.restapi" : {
          "Region" : "NATL",
          "version" : "1.0.0"
        }
      }, {
        "proxy" : {
          "title" : "proxy",
          "timeout" : 120,
          "verb" : "keep",
          "cache-response" : "no-cache",
          "cache-ttl" : 900,
          "version" : "1.0.0",
          "target-url" : "$(backend-url)$(api.operation.path)",
          "tls-profile" : "tlsbackendprod",
          "authz_uri" : "https://artifactory-fof.appl.kp.org/artifactory/api/npm/npm-release",
          "invoke_policy" : "test"
        }
      }, {
        "decrypt.pcitoken" : {
          "version" : "1.1.0"
        }
      }, {
        "validate.xguid" : {
          "version" : "1.0.0"
        }
      }, {
        "activity-log" : {
          "title" : "activity-log",
          "content" : "activity",
          "error-content" : "activity",
          "version" : "1.0.0"
        }
      }, {
        "aaa.using.basic_auth" : {
          "version" : "1.0.0"
        }
      } ]
    }
  },
  "x-EndpointExtension" : [ {
    "Endpoint" : {
      "name" : "Production",
      "url" : "https://prod-dfc-bff-getdocumentlist-1.dfc.ext-svc-bmxp.appl.kp.org",
      "environments" : [ {
        "environment" : "Production"
      } ],
      "regions" : [ {
        "region" : "NATL"
      } ],
      "envlbl" : "",
      "urn" : ""
    }
  }, {
    "Endpoint" : {
      "name" : "Sandbox",
      "url" : "https://dit-dfc-bff-getdocumentlist-1.dfc.ext-svc-bmxnp.appl.kp.org",
      "environments" : [ {
        "environment" : "Sandbox"
      } ],
      "regions" : [ {
        "region" : "NATL"
      } ],
      "envlbl" : "",
      "urn" : ""
    }
  }, {
    "Endpoint" : {
      "name" : "Stable",
      "url" : "https://dit-dfc-bff-getdocumentlist-1.dfc.ext-svc-bmxnp.appl.kp.org",
      "environments" : [ {
        "environment" : "Development"
      } ],
      "regions" : [ {
        "region" : "NATL"
      } ],
      "envlbl" : "wppdev3",
      "urn" : ""
    }
  }, {
    "Endpoint" : {
      "name" : "Integration",
      "url" : "https://qa-dfc-bff-getdocumentlist-1.dfc.ext-svc-bmxnp.appl.kp.org",
      "environments" : [ {
        "environment" : "QA"
      } ],
      "regions" : [ {
        "region" : "NATL"
      } ],
      "envlbl" : "hint2",
      "urn" : ""
    }
  }, {
    "Endpoint" : {
      "name" : "Test",
      "url" : "https://preprod-dfc-bff-getdocumentlist-1.dfc.ext-svc-bmxnp.appl.kp.org",
      "environments" : [ {
        "environment" : "User Acceptance"
      } ],
      "regions" : [ {
        "region" : "NATL"
      } ],
      "envlbl" : "HPPB",
      "urn" : ""
    }
  }, {
    "Endpoint" : {
      "name" : "Performance",
      "url" : "https://qa-dfc-bff-getdocumentlist-1.dfc.ext-svc-bmxnp.appl.kp.org",
      "environments" : [ {
        "environment" : "User Acceptance"
      } ],
      "regions" : [ {
        "region" : "NATL"
      } ],
      "envlbl" : "HPP",
      "urn" : ""
    }
  }, {
    "Endpoint" : {
      "name" : "PreProd",
      "url" : "https://qa-dfc-bff-getdocumentlist-1.dfc.ext-svc-bmxnp.appl.kp.org",
      "environments" : [ {
        "environment" : "User Acceptance"
      } ],
      "regions" : [ {
        "region" : "NATL"
      } ],
      "envlbl" : "HPP",
      "urn" : ""
    }
  } ],
  "x-policies" : [ {
    "type" : "trafficmanagement",
    "name" : "TrafficManagement",
    "description" : "Traffic management policies let you configure cache, control traffic quotas and spikes, set concurrent rate limits, and so on",
    "policies" : [ {
      "name" : "spikeArrestEnv",
      "displayName" : "Spike Arrest at Environment",
      "description" : "Spike Arrest policy protects against traffic spikes.",
      "enabled" : true,
      "applyToFlow" : false
    }, {
      "name" : "quotaAtProduct",
      "displayName" : "Quota at Product Level",
      "description" : "Quota policy to configure the number of request messages that an API proxy allows over a period of time.",
      "enabled" : true,
      "applyToFlow" : false
    }, {
      "name" : "spikeArrestProxy",
      "displayName" : "spikeArrestProxy",
      "description" : "Spike Arrest policy protects against traffic spikes.",
      "enabled" : true,
      "applyToFlow" : false
    } ]
  }, {
    "type" : "security",
    "name" : "Security",
    "description" : "Security policies let you control access to your APIs with OAuth, API key validation, and other threat protection features.",
    "policies" : [ {
      "name" : "cors",
      "displayName" : "CORS",
      "description" : "Enable API's to support Cross-Origin Resource Sharing requests",
      "enabled" : true,
      "applyToFlow" : false
    }, {
      "name" : "verifyapikey",
      "displayName" : "Verify API Key",
      "description" : "Lets you enforce verification of API keys at runtime.",
      "enabled" : false,
      "applyToFlow" : false
    }, {
      "name" : "googleIDToken",
      "displayName" : "Google ID Token for Target Server",
      "description" : "Lets you authenticate using Google authentication",
      "enabled" : false,
      "applyToFlow" : false
    }, {
      "name" : "validateOauthToken",
      "displayName" : "validateOauthToken",
      "description" : "Validate Oauth Token",
      "enabled" : true,
      "applyToFlow" : false
    }, {
      "name" : "clientinfo",
      "displayName" : "clientinfo",
      "description" : "client information",
      "enabled" : true,
      "applyToFlow" : false
    }, {
      "name" : "tonikusertoken",
      "displayName" : "tonikusertoken",
      "description" : "tonik user token",
      "enabled" : true,
      "applyToFlow" : false
    }, {
      "name" : "accesscontrol",
      "displayName" : "IP Access Control",
      "description" : "Lets you allow or deny access to your APIs by specific IP addresses.",
      "enabled" : false,
      "applyToFlow" : false
    } ]
  }, {
    "type" : "logging",
    "name" : "Logging",
    "description" : "Logging policies allow you to log the request data and response data.",
    "policies" : [ {
      "name" : "log",
      "displayName" : "Logger Handler",
      "description" : "Lets you to log the proxy data during runtime",
      "enabled" : true,
      "applyToFlow" : false
    }, {
      "name" : "generateCorrelationId",
      "displayName" : "Generate Correlation ID",
      "description" : "Generate unqiue correlation Id for E2E tracking",
      "enabled" : true,
      "applyToFlow" : false
    }, {
      "name" : "generateFlowName",
      "displayName" : "Track Current Execution Flow Name",
      "description" : "Define and track apigee's current proxy execution flow name",
      "enabled" : true,
      "applyToFlow" : false
    } ]
  }, {
    "type" : "threatprotection",
    "name" : "Threat Management",
    "description" : "Threat management allow you to scan the incoming payloads for any miscellaneous content in the request.",
    "policies" : [ {
      "name" : "jsonThreat",
      "displayName" : "JSON Threat Injection",
      "description" : "Enable payload scan for JSON content",
      "enabled" : true,
      "applyToFlow" : false
    }, {
      "name" : "xssThreat",
      "displayName" : "XSS Injection",
      "description" : "Scans XSS threats in request header, URI, payload",
      "enabled" : true,
      "applyToFlow" : false
    } ]
  }, {
    "type" : "routing",
    "name" : "Target Server Routing Handler",
    "description" : "Endpoint routing for PowerCred micro-services",
    "policies" : [ {
      "name" : "disablePathsuffix",
      "displayName" : "Disable Proxy Base Pathsuffix",
      "description" : "Disable pathsuffix for target routing rule",
      "enabled" : false,
      "applyToFlow" : false
    } ]
  }, {
    "type" : "messageValidation",
    "name" : "Message Validation",
    "description" : "Validate Request/Response mandatory header and payload",
    "policies" : [ {
      "name" : "paylaodValidation",
      "displayName" : "Validate Request Payload",
      "description" : "Proxy request schema validation",
      "enabled" : true,
      "applyToFlow" : false
    }, {
      "name" : "authHeaderCheck",
      "displayName" : "Validate Mandatory Auth Header",
      "description" : "Check proxy mandatory authorization header fields",
      "enabled" : true,
      "applyToFlow" : false
    }, {
      "name" : "requestHeaderCheck",
      "displayName" : "Request Header Check",
      "description" : "Request Header Check",
      "enabled" : true,
      "applyToFlow" : false
    } ]
  }, {
    "type" : "custom",
    "name" : "Custom Policies",
    "description" : "Custom related policies",
    "policies" : [ {
      "name" : "removeAuthHeader",
      "displayName" : "Remove Proxy Auth Header",
      "description" : "Policy to remove proxy auth header before routing to target server",
      "enabled" : true,
      "applyToFlow" : false
    }, {
      "name" : "customAnalytics",
      "displayName" : "Custom Analytics",
      "description" : "Custom Analytics",
      "enabled" : false,
      "applyToFlow" : false
    } ]
  }, {
    "type" : "errorHandler",
    "name" : "Custom Error Handler",
    "description" : "Policy template related to custom fault handling",
    "policies" : [ {
      "name" : "flowErrorHandler",
      "displayName" : "Error Handler",
      "description" : "Policy to handle custom error handling",
      "enabled" : false,
      "applyToFlow" : false
    }, {
      "name" : "targetErrorHandler",
      "displayName" : "Target Error Handler",
      "description" : "Policy to handle custom error handling for target servers",
      "enabled" : false,
      "applyToFlow" : false
    } ]
  }, {
    "type" : "compliance",
    "name" : "Compliance",
    "description" : "Detect Compliance",
    "policies" : [ {
      "name" : "complianceCall",
      "displayName" : "ComplianceCall",
      "description" : "call to compliance",
      "enabled" : true,
      "applyToFlow" : false
    } ]
  } ],
  "x-proxymetadata" : {
    "proxy" : [ {
      "title" : "proxy",
      "timeout" : 120,
      "verb" : "keep",
      "cache-response" : "no-cache",
      "cache-ttl" : 900,
      "version" : "1.0.0",
      "target-url" : "$(backend-url)$(api.operation.path)",
      "tls-profile" : "tlsbackendprod",
      "authz_uri" : "https://artifactory-fof.appl.kp.org/artifactory/api/npm/npm-release",
      "invoke_policy" : "test"
    } ],
    "cors" : {
      "enabled" : false
    },
    "logs" : [ {
      "title" : "activity-log",
      "content" : "activity",
      "error-content" : "activity",
      "version" : "1.0.0"
    } ]
  }
}